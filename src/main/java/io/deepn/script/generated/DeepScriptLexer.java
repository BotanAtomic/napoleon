// Generated from DeepScript.g4 by ANTLR 4.9.3
package io.deepn.script.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DeepScriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, NAME=56, NORMALSTRING=57, CHARSTRING=58, 
		LONGSTRING=59, INT=60, HEX=61, FLOAT=62, LINE_COMMENT=63, WS=64, NEWLINE=65;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
			"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "NAME", "NORMALSTRING", 
			"CHARSTRING", "LONGSTRING", "NESTED_STR", "INT", "HEX", "FLOAT", "ExponentPart", 
			"HexExponentPart", "EscapeSequence", "DecimalEscape", "HexEscape", "UtfEscape", 
			"Digit", "HexDigit", "LINE_COMMENT", "WS", "NEWLINE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'return'", "'='", "'delete'", "'break'", "'while'", "'do'", "'end'", 
			"'for'", "','", "'in'", "'if'", "'then'", "'elseif'", "'else'", "'function'", 
			"'('", "')'", "'null'", "'->'", "'['", "']'", "':'", "'{'", "'}'", "'.'", 
			"'static'", "'or'", "'and'", "'+='", "'-='", "'/='", "'//='", "'*='", 
			"'<'", "'>'", "'<='", "'>='", "'!='", "'=='", "'+'", "'-'", "'*'", "'/'", 
			"'%'", "'//'", "'&'", "'|'", "'^'", "'<<'", "'>>'", "'not'", "'~'", "'**'", 
			"'true'", "'false'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "NAME", "NORMALSTRING", 
			"CHARSTRING", "LONGSTRING", "INT", "HEX", "FLOAT", "LINE_COMMENT", "WS", 
			"NEWLINE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DeepScriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DeepScript.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2C\u01fc\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7"+
		"\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3"+
		"\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3"+
		"\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3"+
		"\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3"+
		"\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 "+
		"\3 \3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'"+
		"\3(\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61"+
		"\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\66"+
		"\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\38\39\39\79\u0156\n"+
		"9\f9\169\u0159\139\3:\3:\3:\7:\u015e\n:\f:\16:\u0161\13:\3:\3:\3;\3;\3"+
		";\7;\u0168\n;\f;\16;\u016b\13;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3=\3=\7=\u0178"+
		"\n=\f=\16=\u017b\13=\3=\3=\3>\6>\u0180\n>\r>\16>\u0181\3?\3?\3?\6?\u0187"+
		"\n?\r?\16?\u0188\3@\6@\u018c\n@\r@\16@\u018d\3@\3@\7@\u0192\n@\f@\16@"+
		"\u0195\13@\3@\5@\u0198\n@\3@\3@\6@\u019c\n@\r@\16@\u019d\3@\5@\u01a1\n"+
		"@\3@\6@\u01a4\n@\r@\16@\u01a5\3@\3@\5@\u01aa\n@\3A\3A\5A\u01ae\nA\3A\6"+
		"A\u01b1\nA\rA\16A\u01b2\3B\3B\5B\u01b7\nB\3B\6B\u01ba\nB\rB\16B\u01bb"+
		"\3C\3C\3C\3C\5C\u01c2\nC\3C\3C\3C\3C\5C\u01c8\nC\3D\3D\3D\3D\3D\3D\3D"+
		"\3D\3D\3D\3D\5D\u01d5\nD\3E\3E\3E\3E\3E\3F\3F\3F\3F\3F\6F\u01e1\nF\rF"+
		"\16F\u01e2\3F\3F\3G\3G\3H\3H\3I\3I\7I\u01ed\nI\fI\16I\u01f0\13I\3I\3I"+
		"\3J\6J\u01f5\nJ\rJ\16J\u01f6\3J\3J\3K\3K\3\u0179\2L\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y\2{>}?\177"+
		"@\u0081\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f\2\u0091"+
		"A\u0093B\u0095C\3\2\21\5\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\4\2))^^\4\2Z"+
		"Zzz\4\2GGgg\4\2--//\4\2RRrr\f\2$$))^^cdhhppttvvxx||\3\2\62\64\3\2\62;"+
		"\5\2\62;CHch\4\2\f\f\16\17\5\2\13\13\16\16\"\"\4\2\f\f\17\17\2\u0210\2"+
		"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2"+
		"\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2"+
		"\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2"+
		"\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2"+
		"\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2"+
		"\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2"+
		"\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U"+
		"\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2"+
		"\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2"+
		"\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2{\3\2\2\2\2}"+
		"\3\2\2\2\2\177\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2"+
		"\3\u0097\3\2\2\2\5\u009e\3\2\2\2\7\u00a0\3\2\2\2\t\u00a7\3\2\2\2\13\u00ad"+
		"\3\2\2\2\r\u00b3\3\2\2\2\17\u00b6\3\2\2\2\21\u00ba\3\2\2\2\23\u00be\3"+
		"\2\2\2\25\u00c0\3\2\2\2\27\u00c3\3\2\2\2\31\u00c6\3\2\2\2\33\u00cb\3\2"+
		"\2\2\35\u00d2\3\2\2\2\37\u00d7\3\2\2\2!\u00e0\3\2\2\2#\u00e2\3\2\2\2%"+
		"\u00e4\3\2\2\2\'\u00e9\3\2\2\2)\u00ec\3\2\2\2+\u00ee\3\2\2\2-\u00f0\3"+
		"\2\2\2/\u00f2\3\2\2\2\61\u00f4\3\2\2\2\63\u00f6\3\2\2\2\65\u00f8\3\2\2"+
		"\2\67\u00ff\3\2\2\29\u0102\3\2\2\2;\u0106\3\2\2\2=\u0109\3\2\2\2?\u010c"+
		"\3\2\2\2A\u010f\3\2\2\2C\u0113\3\2\2\2E\u0116\3\2\2\2G\u0118\3\2\2\2I"+
		"\u011a\3\2\2\2K\u011d\3\2\2\2M\u0120\3\2\2\2O\u0123\3\2\2\2Q\u0126\3\2"+
		"\2\2S\u0128\3\2\2\2U\u012a\3\2\2\2W\u012c\3\2\2\2Y\u012e\3\2\2\2[\u0130"+
		"\3\2\2\2]\u0133\3\2\2\2_\u0135\3\2\2\2a\u0137\3\2\2\2c\u0139\3\2\2\2e"+
		"\u013c\3\2\2\2g\u013f\3\2\2\2i\u0143\3\2\2\2k\u0145\3\2\2\2m\u0148\3\2"+
		"\2\2o\u014d\3\2\2\2q\u0153\3\2\2\2s\u015a\3\2\2\2u\u0164\3\2\2\2w\u016e"+
		"\3\2\2\2y\u0175\3\2\2\2{\u017f\3\2\2\2}\u0183\3\2\2\2\177\u01a9\3\2\2"+
		"\2\u0081\u01ab\3\2\2\2\u0083\u01b4\3\2\2\2\u0085\u01c7\3\2\2\2\u0087\u01d4"+
		"\3\2\2\2\u0089\u01d6\3\2\2\2\u008b\u01db\3\2\2\2\u008d\u01e6\3\2\2\2\u008f"+
		"\u01e8\3\2\2\2\u0091\u01ea\3\2\2\2\u0093\u01f4\3\2\2\2\u0095\u01fa\3\2"+
		"\2\2\u0097\u0098\7t\2\2\u0098\u0099\7g\2\2\u0099\u009a\7v\2\2\u009a\u009b"+
		"\7w\2\2\u009b\u009c\7t\2\2\u009c\u009d\7p\2\2\u009d\4\3\2\2\2\u009e\u009f"+
		"\7?\2\2\u009f\6\3\2\2\2\u00a0\u00a1\7f\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3"+
		"\7n\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6\7g\2\2\u00a6"+
		"\b\3\2\2\2\u00a7\u00a8\7d\2\2\u00a8\u00a9\7t\2\2\u00a9\u00aa\7g\2\2\u00aa"+
		"\u00ab\7c\2\2\u00ab\u00ac\7m\2\2\u00ac\n\3\2\2\2\u00ad\u00ae\7y\2\2\u00ae"+
		"\u00af\7j\2\2\u00af\u00b0\7k\2\2\u00b0\u00b1\7n\2\2\u00b1\u00b2\7g\2\2"+
		"\u00b2\f\3\2\2\2\u00b3\u00b4\7f\2\2\u00b4\u00b5\7q\2\2\u00b5\16\3\2\2"+
		"\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9\7f\2\2\u00b9\20\3"+
		"\2\2\2\u00ba\u00bb\7h\2\2\u00bb\u00bc\7q\2\2\u00bc\u00bd\7t\2\2\u00bd"+
		"\22\3\2\2\2\u00be\u00bf\7.\2\2\u00bf\24\3\2\2\2\u00c0\u00c1\7k\2\2\u00c1"+
		"\u00c2\7p\2\2\u00c2\26\3\2\2\2\u00c3\u00c4\7k\2\2\u00c4\u00c5\7h\2\2\u00c5"+
		"\30\3\2\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8\7j\2\2\u00c8\u00c9\7g\2\2\u00c9"+
		"\u00ca\7p\2\2\u00ca\32\3\2\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7n\2\2\u00cd"+
		"\u00ce\7u\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7h\2\2"+
		"\u00d1\34\3\2\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7n\2\2\u00d4\u00d5\7"+
		"u\2\2\u00d5\u00d6\7g\2\2\u00d6\36\3\2\2\2\u00d7\u00d8\7h\2\2\u00d8\u00d9"+
		"\7w\2\2\u00d9\u00da\7p\2\2\u00da\u00db\7e\2\2\u00db\u00dc\7v\2\2\u00dc"+
		"\u00dd\7k\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7p\2\2\u00df \3\2\2\2\u00e0"+
		"\u00e1\7*\2\2\u00e1\"\3\2\2\2\u00e2\u00e3\7+\2\2\u00e3$\3\2\2\2\u00e4"+
		"\u00e5\7p\2\2\u00e5\u00e6\7w\2\2\u00e6\u00e7\7n\2\2\u00e7\u00e8\7n\2\2"+
		"\u00e8&\3\2\2\2\u00e9\u00ea\7/\2\2\u00ea\u00eb\7@\2\2\u00eb(\3\2\2\2\u00ec"+
		"\u00ed\7]\2\2\u00ed*\3\2\2\2\u00ee\u00ef\7_\2\2\u00ef,\3\2\2\2\u00f0\u00f1"+
		"\7<\2\2\u00f1.\3\2\2\2\u00f2\u00f3\7}\2\2\u00f3\60\3\2\2\2\u00f4\u00f5"+
		"\7\177\2\2\u00f5\62\3\2\2\2\u00f6\u00f7\7\60\2\2\u00f7\64\3\2\2\2\u00f8"+
		"\u00f9\7u\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7c\2\2\u00fb\u00fc\7v\2\2"+
		"\u00fc\u00fd\7k\2\2\u00fd\u00fe\7e\2\2\u00fe\66\3\2\2\2\u00ff\u0100\7"+
		"q\2\2\u0100\u0101\7t\2\2\u01018\3\2\2\2\u0102\u0103\7c\2\2\u0103\u0104"+
		"\7p\2\2\u0104\u0105\7f\2\2\u0105:\3\2\2\2\u0106\u0107\7-\2\2\u0107\u0108"+
		"\7?\2\2\u0108<\3\2\2\2\u0109\u010a\7/\2\2\u010a\u010b\7?\2\2\u010b>\3"+
		"\2\2\2\u010c\u010d\7\61\2\2\u010d\u010e\7?\2\2\u010e@\3\2\2\2\u010f\u0110"+
		"\7\61\2\2\u0110\u0111\7\61\2\2\u0111\u0112\7?\2\2\u0112B\3\2\2\2\u0113"+
		"\u0114\7,\2\2\u0114\u0115\7?\2\2\u0115D\3\2\2\2\u0116\u0117\7>\2\2\u0117"+
		"F\3\2\2\2\u0118\u0119\7@\2\2\u0119H\3\2\2\2\u011a\u011b\7>\2\2\u011b\u011c"+
		"\7?\2\2\u011cJ\3\2\2\2\u011d\u011e\7@\2\2\u011e\u011f\7?\2\2\u011fL\3"+
		"\2\2\2\u0120\u0121\7#\2\2\u0121\u0122\7?\2\2\u0122N\3\2\2\2\u0123\u0124"+
		"\7?\2\2\u0124\u0125\7?\2\2\u0125P\3\2\2\2\u0126\u0127\7-\2\2\u0127R\3"+
		"\2\2\2\u0128\u0129\7/\2\2\u0129T\3\2\2\2\u012a\u012b\7,\2\2\u012bV\3\2"+
		"\2\2\u012c\u012d\7\61\2\2\u012dX\3\2\2\2\u012e\u012f\7\'\2\2\u012fZ\3"+
		"\2\2\2\u0130\u0131\7\61\2\2\u0131\u0132\7\61\2\2\u0132\\\3\2\2\2\u0133"+
		"\u0134\7(\2\2\u0134^\3\2\2\2\u0135\u0136\7~\2\2\u0136`\3\2\2\2\u0137\u0138"+
		"\7`\2\2\u0138b\3\2\2\2\u0139\u013a\7>\2\2\u013a\u013b\7>\2\2\u013bd\3"+
		"\2\2\2\u013c\u013d\7@\2\2\u013d\u013e\7@\2\2\u013ef\3\2\2\2\u013f\u0140"+
		"\7p\2\2\u0140\u0141\7q\2\2\u0141\u0142\7v\2\2\u0142h\3\2\2\2\u0143\u0144"+
		"\7\u0080\2\2\u0144j\3\2\2\2\u0145\u0146\7,\2\2\u0146\u0147\7,\2\2\u0147"+
		"l\3\2\2\2\u0148\u0149\7v\2\2\u0149\u014a\7t\2\2\u014a\u014b\7w\2\2\u014b"+
		"\u014c\7g\2\2\u014cn\3\2\2\2\u014d\u014e\7h\2\2\u014e\u014f\7c\2\2\u014f"+
		"\u0150\7n\2\2\u0150\u0151\7u\2\2\u0151\u0152\7g\2\2\u0152p\3\2\2\2\u0153"+
		"\u0157\t\2\2\2\u0154\u0156\t\3\2\2\u0155\u0154\3\2\2\2\u0156\u0159\3\2"+
		"\2\2\u0157\u0155\3\2\2\2\u0157\u0158\3\2\2\2\u0158r\3\2\2\2\u0159\u0157"+
		"\3\2\2\2\u015a\u015f\7$\2\2\u015b\u015e\5\u0085C\2\u015c\u015e\n\4\2\2"+
		"\u015d\u015b\3\2\2\2\u015d\u015c\3\2\2\2\u015e\u0161\3\2\2\2\u015f\u015d"+
		"\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0162\3\2\2\2\u0161\u015f\3\2\2\2\u0162"+
		"\u0163\7$\2\2\u0163t\3\2\2\2\u0164\u0169\7)\2\2\u0165\u0168\5\u0085C\2"+
		"\u0166\u0168\n\5\2\2\u0167\u0165\3\2\2\2\u0167\u0166\3\2\2\2\u0168\u016b"+
		"\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016a\u016c\3\2\2\2\u016b"+
		"\u0169\3\2\2\2\u016c\u016d\7)\2\2\u016dv\3\2\2\2\u016e\u016f\7$\2\2\u016f"+
		"\u0170\7$\2\2\u0170\u0171\3\2\2\2\u0171\u0172\5y=\2\u0172\u0173\7$\2\2"+
		"\u0173\u0174\7$\2\2\u0174x\3\2\2\2\u0175\u0179\7$\2\2\u0176\u0178\13\2"+
		"\2\2\u0177\u0176\3\2\2\2\u0178\u017b\3\2\2\2\u0179\u017a\3\2\2\2\u0179"+
		"\u0177\3\2\2\2\u017a\u017c\3\2\2\2\u017b\u0179\3\2\2\2\u017c\u017d\7$"+
		"\2\2\u017dz\3\2\2\2\u017e\u0180\5\u008dG\2\u017f\u017e\3\2\2\2\u0180\u0181"+
		"\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182|\3\2\2\2\u0183"+
		"\u0184\7\62\2\2\u0184\u0186\t\6\2\2\u0185\u0187\5\u008fH\2\u0186\u0185"+
		"\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189"+
		"~\3\2\2\2\u018a\u018c\5\u008dG\2\u018b\u018a\3\2\2\2\u018c\u018d\3\2\2"+
		"\2\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u0193"+
		"\7\60\2\2\u0190\u0192\5\u008dG\2\u0191\u0190\3\2\2\2\u0192\u0195\3\2\2"+
		"\2\u0193\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u0197\3\2\2\2\u0195\u0193"+
		"\3\2\2\2\u0196\u0198\5\u0081A\2\u0197\u0196\3\2\2\2\u0197\u0198\3\2\2"+
		"\2\u0198\u01aa\3\2\2\2\u0199\u019b\7\60\2\2\u019a\u019c\5\u008dG\2\u019b"+
		"\u019a\3\2\2\2\u019c\u019d\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2"+
		"\2\2\u019e\u01a0\3\2\2\2\u019f\u01a1\5\u0081A\2\u01a0\u019f\3\2\2\2\u01a0"+
		"\u01a1\3\2\2\2\u01a1\u01aa\3\2\2\2\u01a2\u01a4\5\u008dG\2\u01a3\u01a2"+
		"\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a3\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6"+
		"\u01a7\3\2\2\2\u01a7\u01a8\5\u0081A\2\u01a8\u01aa\3\2\2\2\u01a9\u018b"+
		"\3\2\2\2\u01a9\u0199\3\2\2\2\u01a9\u01a3\3\2\2\2\u01aa\u0080\3\2\2\2\u01ab"+
		"\u01ad\t\7\2\2\u01ac\u01ae\t\b\2\2\u01ad\u01ac\3\2\2\2\u01ad\u01ae\3\2"+
		"\2\2\u01ae\u01b0\3\2\2\2\u01af\u01b1\5\u008dG\2\u01b0\u01af\3\2\2\2\u01b1"+
		"\u01b2\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u0082\3\2"+
		"\2\2\u01b4\u01b6\t\t\2\2\u01b5\u01b7\t\b\2\2\u01b6\u01b5\3\2\2\2\u01b6"+
		"\u01b7\3\2\2\2\u01b7\u01b9\3\2\2\2\u01b8\u01ba\5\u008dG\2\u01b9\u01b8"+
		"\3\2\2\2\u01ba\u01bb\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bc"+
		"\u0084\3\2\2\2\u01bd\u01be\7^\2\2\u01be\u01c8\t\n\2\2\u01bf\u01c1\7^\2"+
		"\2\u01c0\u01c2\7\17\2\2\u01c1\u01c0\3\2\2\2\u01c1\u01c2\3\2\2\2\u01c2"+
		"\u01c3\3\2\2\2\u01c3\u01c8\7\f\2\2\u01c4\u01c8\5\u0087D\2\u01c5\u01c8"+
		"\5\u0089E\2\u01c6\u01c8\5\u008bF\2\u01c7\u01bd\3\2\2\2\u01c7\u01bf\3\2"+
		"\2\2\u01c7\u01c4\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c7\u01c6\3\2\2\2\u01c8"+
		"\u0086\3\2\2\2\u01c9\u01ca\7^\2\2\u01ca\u01d5\5\u008dG\2\u01cb\u01cc\7"+
		"^\2\2\u01cc\u01cd\5\u008dG\2\u01cd\u01ce\5\u008dG\2\u01ce\u01d5\3\2\2"+
		"\2\u01cf\u01d0\7^\2\2\u01d0\u01d1\t\13\2\2\u01d1\u01d2\5\u008dG\2\u01d2"+
		"\u01d3\5\u008dG\2\u01d3\u01d5\3\2\2\2\u01d4\u01c9\3\2\2\2\u01d4\u01cb"+
		"\3\2\2\2\u01d4\u01cf\3\2\2\2\u01d5\u0088\3\2\2\2\u01d6\u01d7\7^\2\2\u01d7"+
		"\u01d8\7z\2\2\u01d8\u01d9\5\u008fH\2\u01d9\u01da\5\u008fH\2\u01da\u008a"+
		"\3\2\2\2\u01db\u01dc\7^\2\2\u01dc\u01dd\7w\2\2\u01dd\u01de\7}\2\2\u01de"+
		"\u01e0\3\2\2\2\u01df\u01e1\5\u008fH\2\u01e0\u01df\3\2\2\2\u01e1\u01e2"+
		"\3\2\2\2\u01e2\u01e0\3\2\2\2\u01e2\u01e3\3\2\2\2\u01e3\u01e4\3\2\2\2\u01e4"+
		"\u01e5\7\177\2\2\u01e5\u008c\3\2\2\2\u01e6\u01e7\t\f\2\2\u01e7\u008e\3"+
		"\2\2\2\u01e8\u01e9\t\r\2\2\u01e9\u0090\3\2\2\2\u01ea\u01ee\7%\2\2\u01eb"+
		"\u01ed\n\16\2\2\u01ec\u01eb\3\2\2\2\u01ed\u01f0\3\2\2\2\u01ee\u01ec\3"+
		"\2\2\2\u01ee\u01ef\3\2\2\2\u01ef\u01f1\3\2\2\2\u01f0\u01ee\3\2\2\2\u01f1"+
		"\u01f2\bI\2\2\u01f2\u0092\3\2\2\2\u01f3\u01f5\t\17\2\2\u01f4\u01f3\3\2"+
		"\2\2\u01f5\u01f6\3\2\2\2\u01f6\u01f4\3\2\2\2\u01f6\u01f7\3\2\2\2\u01f7"+
		"\u01f8\3\2\2\2\u01f8\u01f9\bJ\2\2\u01f9\u0094\3\2\2\2\u01fa\u01fb\t\20"+
		"\2\2\u01fb\u0096\3\2\2\2\34\2\u0157\u015d\u015f\u0167\u0169\u0179\u0181"+
		"\u0188\u018d\u0193\u0197\u019d\u01a0\u01a5\u01a9\u01ad\u01b2\u01b6\u01bb"+
		"\u01c1\u01c7\u01d4\u01e2\u01ee\u01f6\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}